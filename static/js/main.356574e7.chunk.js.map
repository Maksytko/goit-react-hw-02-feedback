{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","logo.svg","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Feedback/Feedback.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","className","style","list","FeedbackOptions","options","onLeaveFeedback","map","option","buttonFeedback","type","onClick","name","Section","title","children","section","Feedback","state","event","target","setState","prevState","this","countTotalFeedback","Math","floor","Object","keys","countPositiveFeedbackPercentage","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,eAAiB,0C,gBCAnCD,EAAOC,QAAU,CAAC,QAAU,2B,4HCDb,I,iDCUAC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,K,gBC8BEC,MA7Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,gCACE,2CACCD,EAAQ,EACP,gCACE,qBAAIE,UAAWC,IAAMC,KAArB,UACE,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,QAEZ,wCAAWC,KACX,oDAAuBC,EAAvB,UAGF,cAAC,EAAD,CAAcN,QAAQ,0B,gBCSfU,MAzBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAACC,GACZ,OACE,wBACEP,UAAWC,IAAMO,eAEjBC,KAAK,SACLC,QAASL,EACTM,KAAMJ,EALR,SAOGA,GALIA,S,gBCMFK,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASd,UAAWC,IAAMc,QAA1B,UACE,4BAAIF,IACHC,MC4CQE,E,4MA7CbC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAYPQ,gBAAkB,SAACa,GACjB,IAAMC,EAASD,EAAMC,OAAOR,KAE5B,EAAKS,UAAS,SAACC,GACb,OAAO,eACJH,EAAMC,OAAOR,KAAOU,EAAUF,GAAU,O,wDAd/C,WACE,OAAOG,KAAKL,MAAMtB,KAAO2B,KAAKL,MAAMrB,QAAU0B,KAAKL,MAAMpB,M,6CAG3D,WACE,IAAMC,EAAQwB,KAAKC,qBACnB,OAAOC,KAAKC,MAAyB,IAAlBH,KAAKL,MAAMtB,KAAcG,K,oBAa9C,WACE,OACE,eAAC,EAAD,CAASe,MAAM,wBAAf,UACE,cAAC,EAAD,CACET,QAASsB,OAAOC,KAAKL,KAAKL,OAC1BZ,gBAAiBiB,KAAKjB,kBAGxB,cAAC,EAAD,CACEV,KAAM2B,KAAKL,MAAMtB,KACjBC,QAAS0B,KAAKL,MAAMrB,QACpBC,IAAKyB,KAAKL,MAAMpB,IAChBC,MAAOwB,KAAKC,qBACZxB,mBAAoBuB,KAAKM,2C,GAvCZC,aCORC,MARf,WACE,OACE,qBAAK9B,UAAU,MAAf,SACE,cAAC,EAAD,OCKS+B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.356574e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1p6NG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonFeedback\":\"FeedbackOptions_buttonFeedback__dldDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3CsrV\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import propTypes from \"prop-types\";\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: propTypes.string,\n};\n\nexport default Notification;\n","import Notification from \"../Notification/Notification\";\nimport propTypes from \"prop-types\";\nimport style from \"./Statistics.module.css\";\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div>\n      <p>Statistics</p>\n      {total > 0 ? (\n        <div>\n          <ul className={style.list}>\n            <li>Good: {good}</li>\n            <li>Neutral: {neutral}</li>\n            <li>Bad: {bad}</li>\n          </ul>\n          <p>Total: {total}</p>\n          <p>Positive feedback: {positivePercentage}%</p>\n        </div>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: propTypes.number,\n  neutral: propTypes.number,\n  bad: propTypes.number,\n  total: propTypes.number,\n  positivePercentage: propTypes.number,\n};\n\nexport default Statistics;\n","import propTypes from \"prop-types\";\nimport style from \"./FeedbackOptions.module.css\";\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map((option) => {\n        return (\n          <button\n            className={style.buttonFeedback}\n            key={option}\n            type=\"button\"\n            onClick={onLeaveFeedback}\n            name={option}\n          >\n            {option}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: propTypes.arrayOf(propTypes.string),\n  onLeaveFeedback: propTypes.func,\n};\n\nexport default FeedbackOptions;\n","import propTypes from \"prop-types\";\nimport style from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section className={style.section}>\n      <p>{title}</p>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: propTypes.string,\n};\n\nexport default Section;\n","import { Component } from \"react\";\nimport Statistics from \"../Statistics/Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Section from \"../Section/Section\";\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const total = this.countTotalFeedback();\n    return Math.floor((this.state.good * 100) / total);\n  }\n\n  onLeaveFeedback = (event) => {\n    const target = event.target.name;\n\n    this.setState((prevState) => {\n      return {\n        [event.target.name]: prevState[target] + 1,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.onLeaveFeedback}\n        />\n\n        <Statistics\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default Feedback;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Feedback from \"./components/Feedback/Feedback\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}